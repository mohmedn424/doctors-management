/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PrescriptionIndexImport } from './routes/prescription/index'
import { Route as PrescriptionIdImport } from './routes/prescription/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PrescriptionIndexRoute = PrescriptionIndexImport.update({
  path: '/prescription/',
  getParentRoute: () => rootRoute,
} as any)

const PrescriptionIdRoute = PrescriptionIdImport.update({
  path: '/prescription/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/prescription/$id': {
      id: '/prescription/$id'
      path: '/prescription/$id'
      fullPath: '/prescription/$id'
      preLoaderRoute: typeof PrescriptionIdImport
      parentRoute: typeof rootRoute
    }
    '/prescription/': {
      id: '/prescription/'
      path: '/prescription'
      fullPath: '/prescription'
      preLoaderRoute: typeof PrescriptionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  PrescriptionIdRoute,
  PrescriptionIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/prescription/$id",
        "/prescription/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/prescription/$id": {
      "filePath": "prescription/$id.jsx"
    },
    "/prescription/": {
      "filePath": "prescription/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
